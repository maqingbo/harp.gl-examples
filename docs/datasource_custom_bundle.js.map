{"version":3,"sources":["webpack://@here/harp-examples/./src/datasource_custom.ts","webpack://@here/harp-examples/external \"THREE\"","webpack://@here/harp-examples/webpack/bootstrap","webpack://@here/harp-examples/webpack/runtime/define property getters","webpack://@here/harp-examples/webpack/runtime/global","webpack://@here/harp-examples/webpack/runtime/hasOwnProperty shorthand","webpack://@here/harp-examples/webpack/runtime/make namespace object","webpack://@here/harp-examples/webpack/runtime/jsonp chunk loading","webpack://@here/harp-examples/webpack/startup"],"names":[],"mappings":"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","file":"datasource_custom_bundle.js","sourcesContent":["/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Theme } from \"@here/harp-datasource-protocol\";\nimport { DebugTileDataSource } from \"@here/harp-debug-datasource\";\nimport { GeoCoordinates, TileKey, webMercatorTilingScheme } from \"@here/harp-geoutils\";\nimport { MapControls, MapControlsUI } from \"@here/harp-map-controls\";\nimport { CopyrightElementHandler, MapView, Tile } from \"@here/harp-mapview\";\nimport {\n    DataProvider,\n    TileDataSource,\n    TileDataSourceOptions,\n    TileFactory\n} from \"@here/harp-mapview-decoder\";\n\nimport { CUSTOM_DECODER_SERVICE_TYPE } from \"../decoder/custom_decoder_defs\";\n\n/**\n * This example shows how to create your own datasource with following features:\n * 1. Decoding and processing in a web-worker\n * 2. Usage of the styling engine in a custom datasource\n * 3. Creation of three.js objects in a web-worker\n * 4. Creating data that appears above and below ground level\n *\n * To achieve all this we have to implement a custom decoder:\n * ```typescript\n * [[include:custom_datasource_example_custom_decoder.ts]]\n * ```\n * A decoder is a class that encapsulates all the work that should be done in\n * a web-worker (i.e. decoding and processing).\n *\n * In this example we derive from [[ThemedTileDecoder]] b/c we also want to use\n * the styling capabilities of harp.gl. If styling is not needed one could also\n * derive from [[ITileDecoder]] directly.\n *\n * The main entry point for the decoder is the [[ThemedTileDecoder.decodeThemedTile]]\n * method (or [[ITileDecoder.decodeTile]] if no styling is needed). All CPU intensive\n * work, like decoding and processing, should go here, because this method is executed\n * in a web-worker. The input to this method (`data`) is coming from the main-thread\n * and is the result of the [[DataProvider.getTile]] method.\n *\n * The [[DataProvider]] is the component that is telling harp.gl where to get the data from.\n * The main method that has to be implemented is the [[DataProvider.getTile]] method.\n * This method is executed in the main thread and should not do any CPU intense work.\n * Normally you would just do a fetch here. The result is passed to a web-worker and gets\n * processed further. In this example we don't fetch any data, but just create some data on the\n * fly.\n * ```typescript\n * [[include:custom_datasource_example_custom_data_provider.ts]]\n * ```\n *\n * Finally we can create our `CustomDataSource`:\n * ```typescript\n * [[include:custom_datasource_example_custom_data_source.ts]]\n * ```\n * As you can see there is no functionality added but everything is used from [[TileDataSource]].\n * It is not mandatory to create a derived class but most likely it is needed at some point to\n * add custom logic.\n *\n * The more interesting part is the instantiation of our `CustomDataSource`:\n * ```typescript\n * [[include:custom_datasource_example_custom_data_source_create.ts]]\n * ```\n * There are two ways to tell the [[DataSource]] about our decoder. Either by setting a\n * [[TileDataSourceOptions.decoder|decoder]] instance or by specifying a\n * [[TileDataSourceOptions.concurrentDecoderServiceName|concurrentDecoderServiceName]].\n * The first approach would result in decoding the data in the main thread. That might\n * be useful for debugging or simple data sources, but we want to show the decoding in\n * a web-worker here, so we use\n * [[TileDataSourceOptions.concurrentDecoderServiceName|concurrentDecoderServiceName]].\n *\n * To understand the\n * [[TileDataSourceOptions.concurrentDecoderServiceName|concurrentDecoderServiceName]]\n * parameter we have to first understand the decoder bundle. All web-workers that are\n * created by harp.gl are loading the decoder bundle that\n * was specified in [[MapViewOptions.decoderUrl]] when creating the [[MapView]]:\n * ```typescript\n * [[include:custom_datasource_example_map_view_decoder_bundle.ts]]\n * ```\n * By default the url of the decoder bundle is \"decoder.bundle.js\" and is generated out of\n * {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-examples/decoder/decoder.ts|decoder.ts}\n * (Assuming you created your app with the\n * {@link https://github.com/heremaps/harp.gl/blob/master/docs/GettingStartedGuide.md#yeoman|Yeoman generator}).\n *\n * The [[CustomDecoder]] has to be registered in the [[WorkerServiceManager]] during the\n * initialization of the decoder bundle. This is done in [[CustomDecoderService.start]]\n * ```typescript\n * [[include:custom_datasource_example_custom_decoder_service.ts]]\n * ```\n * We call [[CustomDecoderService.start]] in the previously mentioned decoder.ts.\n * ```typescript\n * [[include:custom_datasource_example_custom_decoder_service_start.ts]]\n * ```\n *\n * To properly geometry that is considerable higher or lower than the ground level, the bounding\n * boxes of the [[Tile]]s have to be enlarged to contain that geometry. If that is not done, the\n * tile may not be rendered at all, or the geometry may be clipped in some circumstances.\n *\n * In this example, the line is rendered at an altitude of -100m, making the line appear on\n * ground level when zoomed out, but increasingly far below ground level when zoomed in.\n *\n **/\n\nexport namespace CustomDatasourceExample {\n    const MAX_GEOMETRY_HEIGHT = 100;\n    const MIN_GEOMETRY_HEIGHT = -100;\n\n    // snippet:custom_datasource_example_custom_data_provider.ts\n    class CustomDataProvider extends DataProvider {\n        // end:custom_datasource_example_custom_data_provider.ts\n        connect() {\n            // Here you could connect to the service.\n            return Promise.resolve();\n        }\n\n        ready() {\n            // Return true if connect was successful.\n            return true;\n        }\n\n        getTile(tileKey: TileKey, abortSignal?: AbortSignal): Promise<ArrayBufferLike | {}> {\n            // Generate some artificial data. Normally you would do a fetch here.\n            // In this example we create some geometry in geo space that will be converted to\n            // local world space by [[CustomDecoder.convertToLocalWorldCoordinates]]\n\n            const data = new Array<number>();\n            // Do some scaling so that the data fits into the tile.\n            const scale = 10.0 / (1 << tileKey.level);\n            data.push(0.0, 0.0);\n            for (let t = 0.0; t < Math.PI * 4; t += 0.1) {\n                const x = Math.cos(t) * t * scale * 0.5;\n                const y = Math.sin(t) * t * scale;\n                data.push(x, y);\n            }\n            return Promise.resolve(new Float32Array([data.length, ...data]));\n        }\n\n        /** @override */ dispose() {\n            // Nothing to be done here.\n        }\n    }\n\n    // It is not mandatory to create a derived class to represent the tiles from the\n    // CustomDataSource. It is just done here to show that it's possible.\n    class CustomTile extends Tile {}\n\n    // snippet:custom_datasource_example_custom_data_source.ts\n    class CustomDataSource extends TileDataSource<CustomTile> {\n        // end:custom_datasource_example_custom_data_source.ts\n        constructor(options: TileDataSourceOptions) {\n            super(new TileFactory<CustomTile>(CustomTile), options);\n        }\n    }\n\n    // Create a custom theme that will be used to style the data from the CustomDataSource.\n    function customTheme(): Theme {\n        const theme: Theme = {\n            // Create some lights for the \"standard\" technique.\n            lights: [\n                {\n                    type: \"ambient\",\n                    color: \"#FFFFFF\",\n                    name: \"ambientLight\",\n                    intensity: 0.9\n                },\n                {\n                    type: \"directional\",\n                    color: \"#CCCBBB\",\n                    name: \"light1\",\n                    intensity: 0.8,\n                    direction: {\n                        x: 1,\n                        y: 5,\n                        z: 0.5\n                    }\n                },\n                {\n                    type: \"directional\",\n                    color: \"#F4DB9C\",\n                    name: \"light2\",\n                    intensity: 0.8,\n                    direction: {\n                        x: -1,\n                        y: -3,\n                        z: 1\n                    }\n                }\n            ],\n            styles: {\n                // \"customStyleSet\" has to match the StyleSetName that is passed when creating\n                // the CustomDataSource.\n                // We distinguish different data by using the layer attribute that comes with the\n                // data.\n                customStyleSet: [\n                    {\n                        when: [\"==\", [\"get\", \"layer\"], \"line-layer\"],\n                        technique: \"solid-line\",\n                        attr: {\n                            color: \"#ff0000\",\n                            lineWidth: \"10px\"\n                        }\n                    },\n                    {\n                        // We can have the same rule multiple times, so the source data will be\n                        // used multiple times to generate the desired output geometry.\n                        when: [\"==\", [\"get\", \"layer\"], \"line-layer\"],\n                        technique: \"dashed-line\",\n                        attr: {\n                            color: \"#ffff00\",\n                            dashSize: \"30px\",\n                            gapSize: \"20px\",\n                            lineWidth: \"4px\"\n                        }\n                    },\n                    {\n                        when: [\"==\", [\"get\", \"layer\"], \"mesh-layer\"],\n                        technique: \"standard\",\n                        attr: {\n                            color: \"#0000ff\",\n                            depthTest: true\n                        }\n                    }\n                ]\n            }\n        };\n        return theme;\n    }\n\n    // Create a new MapView for the HTMLCanvasElement of the given id.\n    async function initializeMapView(id: string): Promise<MapView> {\n        const canvas = document.getElementById(id) as HTMLCanvasElement;\n\n        const map = new MapView({\n            canvas,\n            theme: customTheme(),\n            // The geometry below ground can create a large number of tiles at lower levels.\n            // Increasing number of visible tiles to minimize gaps.\n            maxVisibleDataSourceTiles: 300,\n            // snippet:custom_datasource_example_map_view_decoder_bundle.ts\n            decoderUrl: \"decoder.bundle.js\"\n            // end:custom_datasource_example_map_view_decoder_bundle.ts\n        });\n\n        CopyrightElementHandler.install(\"copyrightNotice\", map);\n\n        const mapControls = new MapControls(map);\n        mapControls.maxTiltAngle = 50;\n\n        const NY = new GeoCoordinates(40.707, -74.01);\n        map.lookAt({ target: NY, zoomLevel: 16, tilt: 50, heading: -20 });\n        const ui = new MapControlsUI(mapControls);\n        canvas.parentElement!.appendChild(ui.domElement);\n        map.resize(window.innerWidth, window.innerHeight);\n\n        window.addEventListener(\"resize\", () => {\n            map.resize(window.innerWidth, window.innerHeight);\n        });\n\n        // snippet:custom_datasource_example_custom_data_source_create.ts\n        const customDatasource = new CustomDataSource({\n            name: \"customDatasource\",\n            styleSetName: \"customStyleSet\",\n            tilingScheme: webMercatorTilingScheme,\n            dataProvider: new CustomDataProvider(),\n            // If you specify the decoder directly instead of the\n            // concurrentDecoderServiceName the decoding will\n            // happen in the main thread. This is useful for\n            // debugging or if creating a decoder bundle is not\n            // possible.\n            // decoder: new CustomDecoder(),\n            concurrentDecoderServiceName: CUSTOM_DECODER_SERVICE_TYPE,\n            storageLevelOffset: -1,\n            minGeometryHeight: MIN_GEOMETRY_HEIGHT,\n            maxGeometryHeight: MAX_GEOMETRY_HEIGHT\n        });\n        map.addDataSource(customDatasource);\n        // end:custom_datasource_example_custom_data_source_create.ts\n\n        // Also visualize the tile borders:\n        const debugDataSource = new DebugTileDataSource(webMercatorTilingScheme, \"debug\", 20);\n        map.addDataSource(debugDataSource);\n\n        return map;\n    }\n\n    initializeMapView(\"mapCanvas\");\n}\n","module.exports = THREE;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {}\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"datasource_custom\": 0\n};\n\nvar deferredModules = [\n\t[\"./src/datasource_custom.ts\",\"common\"]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_here_harp_examples\"] = self[\"webpackChunk_here_harp_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}