{"version":3,"sources":["webpack://@here/harp-examples/./src/datasource_geojson_choropleth.ts","webpack://@here/harp-examples/external \"THREE\"","webpack://@here/harp-examples/webpack/bootstrap","webpack://@here/harp-examples/webpack/runtime/define property getters","webpack://@here/harp-examples/webpack/runtime/global","webpack://@here/harp-examples/webpack/runtime/hasOwnProperty shorthand","webpack://@here/harp-examples/webpack/runtime/make namespace object","webpack://@here/harp-examples/webpack/runtime/jsonp chunk loading","webpack://@here/harp-examples/webpack/startup"],"names":[],"mappings":"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","file":"datasource_geojson_choropleth_bundle.js","sourcesContent":["/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Style, StyleSet, Theme } from \"@here/harp-datasource-protocol\";\nimport { GeoCoordinates } from \"@here/harp-geoutils\";\nimport { MapControls, MapControlsUI } from \"@here/harp-map-controls\";\nimport { CopyrightElementHandler, MapView } from \"@here/harp-mapview\";\nimport { GeoJsonDataProvider, VectorTileDataSource } from \"@here/harp-vectortile-datasource\";\nimport * as THREE from \"three\";\n\nimport { apikey } from \"../config\";\n\n/**\n * This example demonstrates how to generate a heatmap-like [[StyleSet]] for a GeoJson. To do so,\n * each [[Style]] needs to define its own color shade, and they all need to be staggered on a\n * specific range of values. Here, the values are brought directly in the data of the GeoJson,\n * through the properties held in each feature. This GeoJson is a map of Italy, each feature\n * represents a region, and the properties bear the population density of that region. We can\n * narrow the `when` [[Expr]] condition of a [[Style]] to a value in a property, by simply writing\n * `propertyName` in the condition. The algorithm then reads:\n * ```typescript\n * [[include:geojson_heatmap1.ts]]\n * ```\n *\n * The algorithm loops through a range of values to create the [[Style]]s based on a range of\n * values, hence the variables in use. Externally it is wrapped in a more readable function where we\n * can simply describe the heatmap desired:\n * ```typescript\n * [[include:geojson_heatmap2.ts]]\n * ```\n *\n * Finally this [[StyleSet]] is assigned to the [[DataSource]]:\n * ```typescript\n * [[include:geojson_heatmap3.ts]]\n * ```\n */\nexport namespace GeoJsonHeatmapExample {\n    document.body.innerHTML += `\n        <style>\n            #mapCanvas {\n              top: 0;\n            }\n            #info{\n                color: #fff;\n                width: 80%;\n                left: 50%;\n                position: relative;\n                margin: 10px 0 0 -40%;\n                font-size: 15px;\n            }\n            @media screen and (max-width: 700px) {\n                #info{\n                    font-size:11px;\n                }\n            }\n        </style>\n        <p id=info></p>\n    `;\n\n    /**\n     * Creates a new MapView for the HTMLCanvasElement of the given id.\n     */\n    function initializeBaseMap(id: string, theme: Theme): MapView {\n        const canvas = document.getElementById(id) as HTMLCanvasElement;\n        const mapView = new MapView({\n            canvas,\n            theme\n        });\n\n        mapView.lookAt({\n            target: new GeoCoordinates(42, 14),\n            zoomLevel: 7,\n            tilt: 40,\n            heading: -70\n        });\n\n        const controls = new MapControls(mapView);\n\n        // Add an UI.\n        const ui = new MapControlsUI(controls);\n        canvas.parentElement!.appendChild(ui.domElement);\n\n        window.addEventListener(\"resize\", () => {\n            mapView.resize(window.innerWidth, window.innerHeight);\n        });\n\n        CopyrightElementHandler.install(\"copyrightNotice\", mapView);\n\n        const baseMapDataSource = new VectorTileDataSource({\n            baseUrl: \"https://vector.hereapi.com/v2/vectortiles/base/mc\",\n            authenticationCode: apikey\n        });\n\n        mapView.addDataSource(baseMapDataSource);\n\n        return mapView;\n    }\n\n    /**\n     * A generator for a heatmap-like [[StyleSet]].\n     *\n     * @param options - Heatmap settings.\n     */\n    function generateHeatStyleSet(options: {\n        thresholds: number[];\n        color: string;\n        property: string;\n    }): StyleSet {\n        const styleSet: StyleSet = [];\n        const length = options.thresholds.length;\n        for (let i = 0; i < length; i++) {\n            const color = new THREE.Color(options.color);\n            color.multiplyScalar(((i + 1) * 0.8) / length + 0.2);\n            const max = options.thresholds[i];\n            const min = i - 1 < 0 ? 0 : options.thresholds[i - 1];\n            // snippet:geojson_heatmap1.ts\n            const propertyName = options.property;\n            const style: Style = {\n                description: \"geoJson property-based style\",\n                technique: \"extruded-polygon\",\n                when:\n                    `$geometryType == 'polygon'` +\n                    `&& ${propertyName} > ${min}` +\n                    `&& ${propertyName} <= ${max}`,\n                attr: {\n                    color: \"#\" + color.getHexString(),\n                    transparent: true,\n                    opacity: 0.8,\n                    constantHeight: true,\n                    boundaryWalls: false,\n                    lineWidth: {\n                        interpolation: \"Discrete\",\n                        zoomLevels: [10, 11, 12],\n                        values: [1.0, 1.0, 1.0]\n                    }\n                },\n                renderOrder: 1000\n            };\n            // end:geojson_heatmap1.ts\n            styleSet.push(style);\n        }\n        return styleSet;\n    }\n\n    // snippet:geojson_heatmap2.ts\n    const densityStyleSet: StyleSet = generateHeatStyleSet({\n        property: \"density\",\n        thresholds: [50, 100, 150, 200, 250, 300, 350, 400, 450],\n        color: \"#ff6600\"\n    });\n    // end:geojson_heatmap2.ts\n\n    // snippet:geojson_heatmap3.ts\n    const customTheme = {\n        extends: \"resources/berlin_tilezen_night_reduced.json\",\n        styles: {\n            geojson: densityStyleSet\n        }\n    };\n    // end:geojson_heatmap3.ts\n    const baseMap = initializeBaseMap(\"mapCanvas\", customTheme);\n\n    const geoJsonDataProvider = new GeoJsonDataProvider(\n        \"italy\",\n        new URL(\"resources/italy.json\", window.location.href)\n    );\n    const geoJsonDataSource = new VectorTileDataSource({\n        dataProvider: geoJsonDataProvider,\n        styleSetName: \"geojson\",\n        addGroundPlane: false\n    });\n    baseMap.addDataSource(geoJsonDataSource);\n\n    const infoElement = document.getElementById(\"info\") as HTMLParagraphElement;\n    infoElement.innerHTML =\n        `This choropleth shows how to use custom styling to highlight specific features in the` +\n        ` map. Here some height is given to the extruded polygons directly in the GeoJSON, ` +\n        `whereas the color comes from the population density given in the properties.`;\n}\n","module.exports = THREE;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {}\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"datasource_geojson_choropleth\": 0\n};\n\nvar deferredModules = [\n\t[\"./src/datasource_geojson_choropleth.ts\",\"common\"]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_here_harp_examples\"] = self[\"webpackChunk_here_harp_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}